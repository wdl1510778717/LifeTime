{"version":3,"sources":["webpack:///src/components/pages/video/video.vue","webpack:///./src/components/pages/video/video.vue?4820","webpack:///./src/components/pages/video/video.vue"],"names":["video","data","showBox","showList","playerOptions","playbackRates","autoplay","muted","loop","preload","language","aspectRatio","fluid","sources","type","src","poster","title","notSupportedMessage","controlBar","children","name","inline","mounted","_this","this","loading","$loading","lock","text","spinner","background","setTimeout","close","concat","baseData","computed","player","$refs","videoPlayer","methods","isOpenList","changeVideo","i","index","onPlayerPlay","onPlayerPause","onPlayerEnded","onPlayerLoadeddata","onPlayerWaiting","onPlayerPlaying","onPlayerTimeupdate","onPlayerCanplay","onPlayerCanplaythrough","playerStateChanged","playerCurrentState","playerReadied","video_video","render","_vm","_h","$createElement","_c","_self","staticClass","_v","ref","attrs","options","playsinline","customEventName","on","play","$event","pause","ended","waiting","playing","loadeddata","timeupdate","canplay","canplaythrough","statechanged","ready","_e","click","_l","key","_s","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/4.e3f130f761c1d4f822ca.js","sourcesContent":["<template>\n  <div class=\"myPlayer\">\n    <div class=\"myVideoBox\">\n      <h3>我的小视频</h3>\n      <video-player\n        class=\"video-player-box vjs-big-play-centered\"\n        ref=\"videoPlayer\"\n        v-if=\"showBox\"\n        :options=\"playerOptions\"\n        :playsinline=\"true\"\n        customEventName=\"customstatechangedeventname\"\n        @play=\"onPlayerPlay($event)\"\n        @pause=\"onPlayerPause($event)\"\n        @ended=\"onPlayerEnded($event)\"\n        @waiting=\"onPlayerWaiting($event)\"\n        @playing=\"onPlayerPlaying($event)\"\n        @loadeddata=\"onPlayerLoadeddata($event)\"\n        @timeupdate=\"onPlayerTimeupdate($event)\"\n        @canplay=\"onPlayerCanplay($event)\"\n        @canplaythrough=\"onPlayerCanplaythrough($event)\"\n        @statechanged=\"playerStateChanged($event)\"\n        @ready=\"playerReadied($event)\"\n      >\n      </video-player>\n      <i\n        class=\"el-icon-s-fold listIconOpen\"\n        v-if=\"showList\"\n        @click=\"isOpenList()\"\n      ></i>\n      <i\n        class=\"el-icon-s-unfold listIconClose\"\n        v-if=\"!showList\"\n        @click=\"isOpenList()\"\n      ></i>\n      <div\n        class=\"myVideoList\"\n        v-if=\"!showList\"\n      >\n        <div\n          class=\"item ov-1\"\n          v-for=\"(i,index) in playerOptions.sources\"\n          :key=\"index\"\n          @click=\"changeVideo(i,index)\"\n        >\n          {{index + 1}}&nbsp;{{i.title}}\n        </div>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script>\n// Similarly, you can also introduce the plugin resource pack you want to use within the component\n// import 'some-videojs-plugin'\nexport default {\n  data() {\n    return {\n      showBox: false,\n      showList: true,\n      playerOptions: {\n        playbackRates: [0, 5, 1.0, 1.5, 2.0],\n        // 如果为true,浏览器准备好时开始回放。\n        autoplay: false,\n        // 默认情况下将会消除任何音频。\n        muted: false,\n        // 是否视频一结束就重新开始。\n        loop: false,\n        // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n        preload: \"auto\",\n        language: \"zh-CN\",\n        // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n        aspectRatio: \"16:9\",\n        // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n        fluid: true,\n        sources: [\n          {\n            type: \"video/mp4\",\n            src:\n              \"https://cdn.theguardian.tv/webM/2015/07/20/150716YesMen_synd_768k_vp8.webm\",\n            poster:\n              \"https://cn.bing.com/th?id=OHR.WatkinsGlen_EN-US1837020817_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp\",\n            title: \"示例\"\n          },\n          {\n            type: \"video/mp4\",\n            src:\n              \"../../../static/images/video/birthday-1.mp4\",\n            poster:\n              \"../../../static/images/video/birthday.jpg\",\n            title: \"第一个在一起的生日\"\n          },\n          {\n            type: \"video/mp4\",\n            src:\n              \"../../../static/images/video/birthday-2.mp4\",\n            poster:\n              \"../../../static/images/video/birthday.jpg\",\n            title: \"第一个在一起的生日\"\n          },\n        ],\n        poster: \"\", //允许覆盖Video.js无法播放媒体源时显示的默认信息。\n        notSupportedMessage: \"此视频暂无法播放，请稍后再试\",\n        controlBar: {\n          // timeDivider: true, // 当前时间和持续时间的分隔符\n          // durationDisplay: true, // 显示持续时间\n          // remainingTimeDisplay: false, // 是否显示剩余时间功能\n          // fullscreenToggle: true, // 是否显示全屏按钮\n          // volumePanel: {\n          //   inline: false\n          // }, //声音样式\n          // currentTimeDisplay:true,//时间长度\n          /* \n          使用children的形式可以控制每一个控件的位置，以及显示与否 \n          playToggle, // 播放暂停按钮\n          volumeMenuButton,// 音量控制\n          currentTimeDisplay,// 当前播放时间\n          timeDivider, // '/' 分隔符\n          durationDisplay, // 总时间\n          progressControl, // 点播流时，播放进度条，seek控制\n          liveDisplay, // 直播流时，显示LIVE\n          remainingTimeDisplay, // 当前播放时间\n          playbackRateMenuButton, // 播放速率，当前只有html5模式下才支持设置播放速率\n          fullscreenToggle // 全屏控制\n          */\n          children: [\n            { name: \"playToggle\" }, // 播放按钮\n            { name: \"currentTimeDisplay\" }, // 当前已播放时间\n            { name: \"progressControl\" }, // 播放进度条\n            { name: \"durationDisplay\" }, // 总时间\n            {\n              // 倍数播放\n              name: \"playbackRateMenuButton\",\n              playbackRates: [0.5, 1, 1.5, 2, 2.5],\n              inline: true // 不使用水平方式\n            },\n            {\n              name: \"volumePanel\", // 音量控制\n              inline: true // 不使用水平方式\n            },\n            { name: \"FullscreenToggle\" } // 全屏\n          ]\n        }\n      }\n    };\n  },\n  mounted() {\n    const loading = this.$loading({\n      lock: true,\n      text: \"加载中请稍后\",\n      spinner: \"el-icon-loading\",\n      background: \"rgba(199, 203, 189, 1)\"\n    });\n    setTimeout(() => {\n      this.showBox = true;\n      loading.close();\n    }, 2000);\n    this.playerOptions.sources = this.playerOptions.sources.concat(\n      this.baseData.video\n    );\n    this.playerOptions.poster = this.playerOptions.sources[0].poster;\n    this.playerOptions.sources[0].src = this.playerOptions.sources[0].src;\n  },\n  computed: {\n    player() {\n      return this.$refs.videoPlayer.player;\n    }\n  },\n  methods: {\n    isOpenList() {\n      this.showList = !this.showList;\n    },\n    changeVideo(i, index) {\n      this.playerOptions.poster = this.playerOptions.sources[index].poster;\n      this.playerOptions.sources[0].src = this.playerOptions.sources[index].src;\n    },\n    // listen event\n    onPlayerPlay(player) {\n      // console.log('player play!', player)\n    },\n    onPlayerPause(player) {\n      // console.log('player pause!', player)\n    },\n    onPlayerEnded(player) {\n      // console.log('player ended!', player)\n    },\n    onPlayerLoadeddata(player) {\n      // console.log('player Loadeddata!', player)\n    },\n    onPlayerWaiting(player) {\n      // console.log('player Waiting!', player)\n    },\n    onPlayerPlaying(player) {\n      // console.log('player Playing!', player)\n    },\n    onPlayerTimeupdate(player) {\n      // console.log('player Timeupdate!', player.currentTime())\n    },\n    onPlayerCanplay(player) {\n      // console.log('player Canplay!', player)\n    },\n    onPlayerCanplaythrough(player) {\n      // console.log('player Canplaythrough!', player)\n    },\n    // or listen state event\n    playerStateChanged(playerCurrentState) {\n      // console.log('player current update state', playerCurrentState)\n    },\n    // player is ready\n    playerReadied(player) {\n      // seek to 10s\n      // console.log(\"example player 1 readied\", player);\n      // player.currentTime(10)\n      // console.log('example 01: the player is readied', player)\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n.myPlayer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: calc(100vh - 80px);\n  flex-wrap: wrap;\n  background: rgb(27, 27, 27);\n  padding-top: 12px;\n  box-sizing: border-box;\n}\n.myVideoBox {\n  position: relative;\n  width: 100%;\n  height: 538px;\n  text-align: center;\n  overflow: hidden;\n}\n.video-player-box {\n  width: 96%;\n  height: 538px;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  overflow: hidden;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n  margin: auto;\n}\n.myVideoList {\n  position: absolute;\n  top: 27px;\n  right: 20px;\n  color: #ccc;\n  width: 120px;\n  height: 511px;\n  overflow: auto;\n  .item {\n    width: 100%;\n    height: 24px;\n    text-align: left;\n    font-size: 12px;\n    padding: 6px 10px 4px 4px;\n    cursor: pointer;\n  }\n  .item:hover{\n    color: rgb(229, 245, 173);\n  }\n}\n.listIconOpen {\n  position: absolute;\n  top: 45px;\n  left: 40px;\n  cursor: pointer;\n  color: #fff;\n}\n.listIconClose {\n  position: absolute;\n  top: 45px;\n  left: 40px;\n  cursor: pointer;\n  color: #fff;\n}\n.myVideoList::-webkit-scrollbar {\n  display: none;\n}\n.vjs-custom-skin > .video-js .vjs-big-play-button {\n  transform: scale(0.6) !important;\n}\n\n@media screen and (max-width: 414px) {\n  .video-player-box {\n    margin-top: 12px;\n    height: 179px;\n  }\n  .myVideoList {\n    top: 39px;\n    height: 177px;\n    right: 0;\n  }\n  .listIconOpen {\n    left: 20px;\n  }\n  .listIconClose {\n    left: 20px;\n  }\n}\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/pages/video/video.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"myPlayer\"},[_c('div',{staticClass:\"myVideoBox\"},[_c('h3',[_vm._v(\"我的小视频\")]),_vm._v(\" \"),(_vm.showBox)?_c('video-player',{ref:\"videoPlayer\",staticClass:\"video-player-box vjs-big-play-centered\",attrs:{\"options\":_vm.playerOptions,\"playsinline\":true,\"customEventName\":\"customstatechangedeventname\"},on:{\"play\":function($event){return _vm.onPlayerPlay($event)},\"pause\":function($event){return _vm.onPlayerPause($event)},\"ended\":function($event){return _vm.onPlayerEnded($event)},\"waiting\":function($event){return _vm.onPlayerWaiting($event)},\"playing\":function($event){return _vm.onPlayerPlaying($event)},\"loadeddata\":function($event){return _vm.onPlayerLoadeddata($event)},\"timeupdate\":function($event){return _vm.onPlayerTimeupdate($event)},\"canplay\":function($event){return _vm.onPlayerCanplay($event)},\"canplaythrough\":function($event){return _vm.onPlayerCanplaythrough($event)},\"statechanged\":function($event){return _vm.playerStateChanged($event)},\"ready\":function($event){return _vm.playerReadied($event)}}}):_vm._e(),_vm._v(\" \"),(_vm.showList)?_c('i',{staticClass:\"el-icon-s-fold listIconOpen\",on:{\"click\":function($event){return _vm.isOpenList()}}}):_vm._e(),_vm._v(\" \"),(!_vm.showList)?_c('i',{staticClass:\"el-icon-s-unfold listIconClose\",on:{\"click\":function($event){return _vm.isOpenList()}}}):_vm._e(),_vm._v(\" \"),(!_vm.showList)?_c('div',{staticClass:\"myVideoList\"},_vm._l((_vm.playerOptions.sources),function(i,index){return _c('div',{key:index,staticClass:\"item ov-1\",on:{\"click\":function($event){return _vm.changeVideo(i,index)}}},[_vm._v(\"\\n        \"+_vm._s(index + 1)+\" \"+_vm._s(i.title)+\"\\n      \")])}),0):_vm._e()],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a1c8f616\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/pages/video/video.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a1c8f616\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./video.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./video.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./video.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a1c8f616\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./video.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pages/video/video.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}